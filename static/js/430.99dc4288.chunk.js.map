{"version":3,"file":"static/js/430.99dc4288.chunk.js","mappings":"mLACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,CACT,CDVe,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEA,OAAOE,CACT,C,aEjBA,EAA0B,4BAA1B,EAA8D,0BAA9D,EAAgG,0B,oCCahG,EAVkB,SAAC,GAAuC,IAArCW,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,aAAiBC,EAAY,OACjDC,GAAKC,EAAAA,EAAAA,UAAQ,kBCcR,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfF,EAAK,GACLG,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC3CA,KAAQ,CACb,IAAIK,EAAqB,GAAdJ,EAAMD,GAEfF,GADEO,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOP,CACR,CD9B0BU,EAAN,GAAgB,IACnC,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAOC,QAASb,EAAIW,UAAWC,EAA/B,SAA2Cf,KAC3C,kCAAOG,GAAIA,EAAIc,SAAUhB,GAAkBC,GAA3C,IAAkDY,UAAWC,OAGlE,C,qDEXD,MAAwB,qB,SCKxB,EAJc,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACf,OAAO,eAAIJ,UAAWC,EAAf,SAA2BG,GACnC,C,0GCCD,EALqB,CACjBC,MAAO,GACPC,SAAU,ICed,EAjBe,CACbD,MAAO,CACLE,KAAM,QACNC,KAAM,QACNC,UAAU,EACVC,YAAa,QACbxB,MAAO,SAEToB,SAAU,CACRC,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,YAAa,WACbxB,MAAO,aCZX,EAA0B,4BAA1B,EAA6D,yBAA7D,EAA4F,wB,SC8B5F,EAzBkB,SAAC,GAAkB,IAAhByB,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAF,SAAAA,IAFMG,EAAR,EAAQA,MAAO3B,EAAf,EAAeA,aAAc4B,EAA7B,EAA6BA,aAIrBV,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SACf,OACE,gBAAKN,UAAWC,EAAhB,UACE,kBAAMU,SAAUI,EAAcf,UAAWC,EAAzC,WACE,SAAC,KAAD,QACEe,MAAOX,EACPlB,aAAcA,GACV8B,EAAAA,SAEN,SAAC,KAAD,QACED,MAAOV,EACPnB,aAAcA,GACV8B,EAAAA,YAEN,mBAAQjB,UAAWC,EAAnB,uBAIP,E,kBC5BD,EAA0B,4BCkB1B,EAbkB,WAChB,IAAMiB,GAAWC,EAAAA,EAAAA,MAIjB,OACE,iBAAKnB,UAAWC,EAAhB,WACE,SAACmB,EAAA,EAAD,uBACA,SAAC,EAAD,CAAWT,SANK,SAAAU,GAClBH,GAASI,EAAAA,EAAAA,IAAMD,GAChB,MAOF,C","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/components/shared/TextField/text-field.module.css?05ad","components/shared/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/shared/Title/title.module.css?36af","components/shared/Title/Title.jsx","components/modules/LoginForm/initialState.js","components/modules/LoginForm/fields.js","webpack://react-homework-template/./src/components/modules/LoginForm/login-form.module.css?158b","components/modules/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LoginPage/login-page.module.css?8795","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__F5-wH\",\"label\":\"text-field_label__7jSYo\",\"input\":\"text-field_input__zcppx\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './text-field.module.css';\n\nconst TextInput = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor={id} className={css.label}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} className={css.input} />\n    </div>\n  );\n};\n\nexport default TextInput;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__rW5vZ\"};","import css from './title.module.css';\n\nconst Title = ({ children }) => {\n  return <h1 className={css.title}>{children}</h1>;\n};\n\nexport default Title;\n","const initialState = {\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;","const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    placeholder: 'Email',\n    label: 'email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    placeholder: 'Password',\n    label: 'password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"login-form_wrapper__j7LG5\",\"form\":\"login-form_form__EtV7-\",\"btn\":\"login-form_btn__q9IfY\"};","import TextInput from 'components/shared/TextField/TextField';\nimport useForm from '../../../hooks/useForm';\nimport initialState from './initialState';\nimport fields from './fields';\nimport css from './login-form.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <TextInput\n          value={email}\n          handleChange={handleChange}\n          {...fields.email}\n        />\n        <TextInput\n          value={password}\n          handleChange={handleChange}\n          {...fields.password}\n        />\n        <button className={css.btn}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"login-page_section__TPYDX\"};","import Title from '../../components/shared/Title/Title';\nimport LoginForm from 'components/modules/LoginForm/LoginForm';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport css from './login-page.module.css';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n  return (\n    <div className={css.section}>\n      <Title>sign in</Title>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","label","handleChange","props","id","useMemo","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","className","css","htmlFor","onChange","children","email","password","type","name","required","placeholder","onSubmit","useForm","initialState","state","handleSubmit","value","fields","dispatch","useDispatch","Title","data","login"],"sourceRoot":""}